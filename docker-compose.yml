name: "ghostland"

services:
  minecraft:
    # Docker Config
    image: "itzg/minecraft-server:java21-graalvm"
    tty: true
    stdin_open: true
    network_mode: "host"
    volumes:
      - "./minecraft/gl7:/data"
      - "./builds:/modpacks:ro"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mc-health"]
      start_period: 210s #3,5min
      interval: 3s
      retries: 40 #extra 2min
    secrets:
      - db_host
      - db_port
      - db_name
      - db_user
      - db_password
      - db_table_accounts_ingame
      - bot_poltergeist
      - seed
    depends_on:
      ci:
        condition: service_healthy
      db:
        condition: service_started
    # MC Config
    environment:
      # Modpack
      TYPE: "MODRINTH"
      MODRINTH_MODPACK: "/modpacks/latest_server.mrpack"
      # Minecraft stuff
      GUI: "FALSE"
      EULA: "TRUE"              #  Why are some bools upper-case...
      # Java stuff
      MEMORY: "18G"
      USE_AIKAR_FLAGS: "true"   #  ...and others lower-case? No fucking idea! I'm just following the docs, that's all.
      # Secrets
      CFG_DB_HOST_FILE: "/run/secrets/db_host"
      CFG_DB_PORT_FILE: "/run/secrets/db_port"
      CFG_DB_NAME_FILE: "/run/secrets/db_name"
      CFG_DB_TABLE_FILE: "/run/secrets/db_table_accounts_ingame"
      CFG_DB_USER_FILE: "/run/secrets/db_user"
      CFG_DB_PASS_FILE: "/run/secrets/db_password"
      CFG_BOT_TOKEN_FILE: "/run/secrets/bot_poltergeist"
      CFG_SEED_FILE: "/run/secrets/seed"
      # Desperatley trying to get Secrets to work
      REPLACE_ENV_VARIABLES: "TRUE"
      ENV_VARIABLE_PREFIX: "CFG_"
      REPLACE_ENV_IN_PLACE: "true"
      REPLACE_ENV_DURING_SYNC: "true"
      # Misc
      UID: "42069"
      GID: "%DOCKER_GROUP_ID%"
      TZ: "Europe/Warsaw"
      LOG_TIMESTAMP: "true"
      MODRINTH_FORCE_SYNCHRONIZE: "true"
      DATAPACKS: "/data/datapacks/vanilla_tweaks_craftings.zip,/data/datapacks/VT_afk display v1.1.7 (MC 1.20-1.20.6).zip,/data/datapacks/VT_armor statues v2.8.12 (MC 1.20-1.20.6).zip,/data/datapacks/VT_cauldron concrete v3.0.0 (MC 1.20-1.20.6).zip,/data/datapacks/VT_chunk loaders v1.0.8 (MC 1.20-1.20.6).zip,/data/datapacks/VT_confetti creepers v2.2.8 (MC 1.20-1.20.6).zip,/data/datapacks/VT_count mob deaths v1.1.8 (MC 1.20-1.20.6).zip,/data/datapacks/VT_custom nether portals v2.3.10 (MC 1.20-1.20.6).zip,/data/datapacks/VT_double shulker shells v1.3.7 (MC 1.20-1.20.6).zip,/data/datapacks/VT_elevators v1.0.8 (MC 1.20-1.20.6).zip,/data/datapacks/VT_gem villagers v4.4.5 (MC 1.20-1.20.6).zip,/data/datapacks/VT_item averages v1.3.8 (MC 1.20-1.20.6).zip,/data/datapacks/VT_larger phantoms v1.2.8 (MC 1.20-1.20.6).zip,/data/datapacks/VT_more mob heads v2.13.1 (MC 1.20-1.20.6).zip,/data/datapacks/VT_nether portal coords v1.1.7 (MC 1.20-1.20.6).zip,/data/datapacks/VT_player head drops v1.1.7 (MC 1.20-1.20.6).zip,/data/datapacks/VT_real time clock v1.1.7 (MC 1.20-1.20.6).zip,/data/datapacks/VT_redstone rotation wrench v1.1.8 (MC 1.20-1.20.6).zip,/data/datapacks/VT_silence mobs v1.2.2 (MC 1.20-1.20.6).zip,/data/datapacks/VT_spawning spheres v1.1.7 (MC 1.20-1.20.6).zip,/data/datapacks/VT_spectator conduit power v1.1.7 (MC 1.20-1.20.6).zip,/data/datapacks/VT_spectator night vision v1.1.7 (MC 1.20-1.20.6).zip,/data/datapacks/VT_tag v2.1.8 (MC 1.20-1.20.6).zip,/data/datapacks/VT_terracotta rotation wrench v1.1.8 (MC 1.20-1.20.6).zip,/data/datapacks/VT_thunder shrine v1.1.9 (MC 1.20-1.20.6).zip,/data/datapacks/VT_track raw statistics v1.7.3 (MC 1.20-1.20.6).zip,/data/datapacks/VT_track statistics v1.1.9 (MC 1.20-1.20.6).zip,/data/datapacks/VT_treasure gems v1.2.11 (MC 1.20-1.20.6).zip,/data/datapacks/VT_villager death messages v1.2.9 (MC 1.20-1.20.6).zip,/data/datapacks/VT_villager workstation highlights v1.1.7 (MC 1.20-1.20.6).zip,/data/datapacks/VT_wandering trades v1.7.6 (MC 1.20-1.20.6).zip,/data/datapacks/VT_xp management v1.1.7 (MC 1.20-1.20.6).zip,/data/datapacks/"
      LEVEL: "world"
  
  #backuper:
    #image: itzg/mc-backup
    #user: "42069"
    #depends_on:
      #minecraft:
        #condition: service_healthy
    #environment:
      #BACKUP_INTERVAL: "10h"
      #RCON_HOST: "minecraft"
      #INITIAL_DELAY: 0
      #EXCLUDES: "*.jar,cache,logs,*.tmp,.cache,.e4mc_cache,.fabric,.mixin.out,crash-reports,immersive_paintings_cache,libraries,modernfix,versions,usercache.json,usernamecache.json"
      #TZ: "Europe/Warsaw"
      #BACKUP_NAME: "full"
      #PRUNE_BACKUPS_DAYS: 3
    #volumes:
      #- ./minecraft/gl6:/data:ro
      #- ./backups/gl6:/backups
  
  ci:
    build: "https://github.com/Team-GhostLand/Grinch.git"
    network_mode: "host"
    volumes:
      - "./builds:/exports"
    restart: unless-stopped # Used to be on-failure:5, to prevent it from failure-looping if something catastropic happens (eg. it can't connect to GitHub or the ZIP file is corrupted). But it seems that, every once in a while, it will EITHER just randomly fail (and after this happens 5 times, it will fail permanently) OR exit as „completed” (we don't yet know which it is), which usually means we have to manually restart it every 3 days or so. Until we properly debug what tf is going on - this needs to be set to unless-stopped for the Continuus Inregration to actually stay continuus.
    healthcheck:
      test: ["CMD-SHELL", "test -e /exports/latest_server.mrpack"]
      start_period: 120s # Considering how brutal the interval-retries policy is, we should give it a lot of time to start (2min ought to be enough), to be 100% sure that it won't die immidiatley upon startup.
      interval: 1s # Very brutal interval-retries policy becasue if this file ever disappears while the minecraft service is restarting - all hell will break loose. We REALLY want to make sure that as soon as this file goes missing, the service goes unhealthy (thus preventing minecraft from starting)
      retries: 2
      timeout: 1s # a simple test command should run almost instantly (hell, even 1s might be too much, but I don't think this takes miliseconds)
    environment:
      REPO: https://github.com/Team-GhostLand/GhostLand7.git
      NAME: GhostLand
  
  web:
    image: caddy:alpine
    restart: unless-stopped
    network_mode: "host"
    volumes:
      - ./web/etc-caddy:/etc/caddy
      - ./builds:/srv/ci
      - ./web/caddy-data:/data
      - ./web/caddy-config:/config
    depends_on:
      ci:
        condition: service_healthy
      web-custom:
        condition: service_started #TODO: Add proper healthchecks to web services
  
  web-custom:
    build: "https://github.com/Team-GhostLand/GL-web.git"
    restart: unless-stopped
    network_mode: "host"
  
  bot-account:
    build: "https://github.com/Team-GhostLand/Poltergeist.git"
    restart: unless-stopped
    network_mode: "host"
    volumes:
      - ./bots/account:/usr/src/app/data
    depends_on:
      db:
        condition: service_started
    secrets:
      - db_host
      - db_port
      - db_name
      - db_user
      - db_password
      - bot_account
      - bot_account_id
      - bot_account_hook
    user: "42069:%DOCKER_GROUP_ID%"
  
  db:
    image: mysql:9-oracle
    restart: unless-stopped
    network_mode: "host"
    secrets:
      - db_name
      - db_root
      - db_user
      - db_password
    volumes:
      - "./db/data:/var/lib/mysql"
      - "./db/config:/etc"
    environment:
      MYSQL_DATABASE_FILE: "/run/secrets/db_name"
      MYSQL_ROOT_PASSWORD_FILE: "/run/secrets/db_root"
      MYSQL_USER_FILE: "/run/secrets/db_user"
      MYSQL_PASSWORD_FILE: "/run/secrets/db_password"
    user: "42069:%DOCKER_GROUP_ID%"


secrets:
    db_host:
      file: ./secrets/db/host.txt
    db_port:
      file: ./secrets/db/port.txt
    db_name:
      file: ./secrets/db/name.txt
    db_root:
      file: ./secrets/db/accounts/root_pass.txt
    db_user:
      file: ./secrets/db/accounts/user.txt
    db_password:
      file: ./secrets/db/accounts/user_pass.txt
    db_table_accounts_ingame:
      file: ./secrets/db/tables/accounts_ingame.txt
    bot_poltergeist:
      file: ./secrets/bot_tokens/poltergeist.txt
    bot_account:
      file: ./secrets/bot_tokens/account.txt
    bot_account_id:
      file: ./secrets/bot_tokens/account_id.txt
    bot_account_hook:
      file: ./secrets/bot_tokens/account_hook.txt
    seed:
      file: ./secrets/seed.txt